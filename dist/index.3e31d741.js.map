{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/register.js","src/js/login.js"],"sourcesContent":["// Funktion för att registrera en ny användare\nasync function $46200e9c813bcb89$export$16015adca85344a(firstname, lastname, username, password) {\n    try {\n        // Validera inmatning\n        if (!firstname || !lastname || !username || !password) throw new Error(\"Alla f\\xe4lt m\\xe5ste fyllas i.\");\n        if (username.length < 5) throw new Error(\"Anv\\xe4ndarnamnet m\\xe5ste vara minst 5 tecken l\\xe5ngt.\");\n        if (password.length < 8) throw new Error(\"L\\xf6senordet m\\xe5ste vara minst 8 tecken l\\xe5ngt.\");\n        const url = \"http://localhost:3000/api/register\";\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                firstname: firstname,\n                lastname: lastname,\n                username: username,\n                password: password\n            })\n        });\n        // Kontrollera om registreringen lyckades\n        if (!response.ok) throw new Error(\"Kunde inte registrera ny anv\\xe4ndare.\");\n        // Returnera resultatet\n        const data = await response.json();\n        alert(\"Du \\xe4r nu registrerad!\");\n        const firstnameEl = document.getElementById(\"firstname\");\n        const lastnameEl = document.getElementById(\"lastname\");\n        const usernameEl = document.getElementById(\"username\");\n        const passwordEl = document.getElementById(\"password\");\n        firstnameEl.value = \"\";\n        lastnameEl.value = \"\";\n        usernameEl.value = \"\";\n        passwordEl.value = \"\";\n        return data;\n    } catch (error) {\n        console.error(\"Fel vid registrering av ny anv\\xe4ndare:\", error.message);\n        throw error;\n    }\n}\n\n\nasync function $0f32c2d6739d5745$export$692b4a7cc7a486ce(username, password) {\n    try {\n        // Validate input\n        if (!username || !password) throw new Error(\"Alla f\\xe4lt m\\xe5ste fyllas i.\");\n        const url = \"http://localhost:3000/api/login\";\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            })\n        });\n        // If register succeeds\n        if (!response.ok) throw new Error(\"Kunde inte logga in anv\\xe4ndare.\");\n        // Return result\n        const data = await response.json();\n        const token = data.response.token;\n        const validate = await $0f32c2d6739d5745$export$b524a674cf218100(token);\n        //Validate authorization\n        if (validate.message === \"Protected route\") {\n            alert(\"Du \\xe4r inloggad!\");\n            window.location.href = \"/my-pages\";\n        }\n    } catch (error) {\n        console.error(\"Fel vid inloggning:\", error.message);\n        throw error;\n    }\n}\nasync function $0f32c2d6739d5745$export$b524a674cf218100(token) {\n    const url = \"http://localhost:3000/api/secret\";\n    const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n            authorization: \"Bearer \" + token\n        }\n    }).then((response)=>{\n        console.log(response);\n        if (!response.ok) throw new Error(\"Inloggningen misslyckades\");\n        localStorage.setItem(\"token\", token);\n        return response;\n    }).catch((error)=>{\n        console.error(\"Fel vid inloggning:\", error.message);\n    // Här kan du lägga till kod för att hantera felaktig inloggning\n    });\n    return response.json();\n}\n\n\nconsole.log(\"test\");\nconst $54b47fc030b7b21e$var$registerEl = document.getElementById(\"register\");\nconst $54b47fc030b7b21e$var$firstnameEl = document.getElementById(\"firstname\");\nconst $54b47fc030b7b21e$var$lastnameEl = document.getElementById(\"lastname\");\nconst $54b47fc030b7b21e$var$usernameEl = document.getElementById(\"username\");\nconst $54b47fc030b7b21e$var$passwordEl = document.getElementById(\"password\");\nconst $54b47fc030b7b21e$var$loginEl = document.getElementById(\"login\");\nconst $54b47fc030b7b21e$var$userNameLoginEl = document.getElementById(\"userNameLogin\");\nconst $54b47fc030b7b21e$var$passWordLoginEl = document.getElementById(\"passWordLogin\");\nconst $54b47fc030b7b21e$var$errMessageRegEl = document.getElementById(\"errMessageReg\");\n$54b47fc030b7b21e$var$registerEl.addEventListener(\"click\", function() {\n    event.preventDefault();\n    const firstnameValue = $54b47fc030b7b21e$var$firstnameEl.value;\n    const lastnameValue = $54b47fc030b7b21e$var$lastnameEl.value;\n    const usernameValue = $54b47fc030b7b21e$var$usernameEl.value;\n    const passwordValue = $54b47fc030b7b21e$var$passwordEl.value;\n    if (firstnameValue === \"\" || lastnameValue === \"\" || usernameValue === \"\" || passwordValue === \"\") $54b47fc030b7b21e$var$errMessageRegEl.textContent = \"Alla f\\xe4lt m\\xe5ste fyllas i.\";\n    (0, $46200e9c813bcb89$export$16015adca85344a)(firstnameValue, lastnameValue, usernameValue, passwordValue);\n});\n$54b47fc030b7b21e$var$loginEl.addEventListener(\"click\", async function() {\n    event.preventDefault();\n    const userNameLoginValue = $54b47fc030b7b21e$var$userNameLoginEl.value;\n    const passWordLoginValue = $54b47fc030b7b21e$var$passWordLoginEl.value;\n    const authorized = await (0, $0f32c2d6739d5745$export$692b4a7cc7a486ce)(userNameLoginValue, passWordLoginValue);\n});\n\n\n//# sourceMappingURL=index.3e31d741.js.map\n","import { registerUser } from \"./register\";\r\nimport { loginUser, validateUser } from \"./login\";\r\n\r\nconsole.log(\"test\");\r\n\r\nconst registerEl = document.getElementById(\"register\");\r\nconst firstnameEl = document.getElementById(\"firstname\");\r\nconst lastnameEl = document.getElementById(\"lastname\");\r\nconst usernameEl = document.getElementById(\"username\");\r\nconst passwordEl = document.getElementById(\"password\");\r\nconst loginEl = document.getElementById(\"login\");\r\nconst userNameLoginEl = document.getElementById(\"userNameLogin\");\r\nconst passWordLoginEl = document.getElementById(\"passWordLogin\");\r\nconst errMessageRegEl = document.getElementById(\"errMessageReg\");\r\n\r\nregisterEl.addEventListener(\"click\", function () {\r\n  event.preventDefault();\r\n  const firstnameValue = firstnameEl.value;\r\n  const lastnameValue = lastnameEl.value;\r\n  const usernameValue = usernameEl.value;\r\n  const passwordValue = passwordEl.value;\r\n\r\n  if (\r\n    firstnameValue === \"\" ||\r\n    lastnameValue === \"\" ||\r\n    usernameValue === \"\" ||\r\n    passwordValue === \"\"\r\n  ) {\r\n    errMessageRegEl.textContent = \"Alla fält måste fyllas i.\";\r\n  }\r\n\r\n  registerUser(firstnameValue, lastnameValue, usernameValue, passwordValue);\r\n});\r\n\r\nloginEl.addEventListener(\"click\", async function () {\r\n  event.preventDefault();\r\n  const userNameLoginValue = userNameLoginEl.value;\r\n  const passWordLoginValue = passWordLoginEl.value;\r\n\r\n  const authorized = await loginUser(userNameLoginValue, passWordLoginValue);\r\n});\r\n","// Funktion för att registrera en ny användare\r\nexport async function registerUser(firstname, lastname, username, password) {\r\n  try {\r\n    // Validera inmatning\r\n    if (!firstname || !lastname || !username || !password) {\r\n      throw new Error(\"Alla fält måste fyllas i.\");\r\n    }\r\n\r\n    if (username.length < 5) {\r\n      throw new Error(\"Användarnamnet måste vara minst 5 tecken långt.\");\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      throw new Error(\"Lösenordet måste vara minst 8 tecken långt.\");\r\n    }\r\n\r\n    const url = \"http://localhost:3000/api/register\";\r\n\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstname,\r\n        lastname,\r\n        username,\r\n        password,\r\n      }),\r\n    });\r\n\r\n    // Kontrollera om registreringen lyckades\r\n    if (!response.ok) {\r\n      throw new Error(\"Kunde inte registrera ny användare.\");\r\n    }\r\n\r\n    // Returnera resultatet\r\n    const data = await response.json();\r\n    alert(\"Du är nu registrerad!\");\r\n    const firstnameEl = document.getElementById(\"firstname\");\r\n    const lastnameEl = document.getElementById(\"lastname\");\r\n    const usernameEl = document.getElementById(\"username\");\r\n    const passwordEl = document.getElementById(\"password\");\r\n\r\n    firstnameEl.value = \"\";\r\n    lastnameEl.value = \"\";\r\n    usernameEl.value = \"\";\r\n    passwordEl.value = \"\";\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Fel vid registrering av ny användare:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\n","export async function loginUser(username, password) {\r\n  try {\r\n    // Validate input\r\n    if (!username || !password) {\r\n      throw new Error(\"Alla fält måste fyllas i.\");\r\n    }\r\n\r\n    const url = \"http://localhost:3000/api/login\";\r\n\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n      }),\r\n    });\r\n\r\n    // If register succeeds\r\n    if (!response.ok) {\r\n      throw new Error(\"Kunde inte logga in användare.\");\r\n    }\r\n\r\n    // Return result\r\n    const data = await response.json();\r\n    const token = data.response.token;\r\n    const validate = await validateUser(token);\r\n\r\n    //Validate authorization\r\n    if (validate.message === \"Protected route\") {\r\n      alert(\"Du är inloggad!\");\r\n      window.location.href = \"/my-pages\";\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Fel vid inloggning:\", error.message);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function validateUser(token) {\r\n  const url = \"http://localhost:3000/api/secret\";\r\n  const response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      authorization: \"Bearer \" + token,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(response);\r\n      if (!response.ok) {\r\n        throw new Error(\"Inloggningen misslyckades\");\r\n      }\r\n      localStorage.setItem(\"token\", token);\r\n\r\n      return response;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Fel vid inloggning:\", error.message);\r\n      // Här kan du lägga till kod för att hantera felaktig inloggning\r\n    });\r\n  return response.json();\r\n}\r\n"],"names":["$46200e9c813bcb89$export$16015adca85344a","firstname","lastname","username","password","Error","length","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","firstnameEl","document","getElementById","lastnameEl","usernameEl","passwordEl","value","error","console","message","$0f32c2d6739d5745$export$692b4a7cc7a486ce","token","validate","$0f32c2d6739d5745$export$b524a674cf218100","window","location","href","authorization","then","log","localStorage","setItem","catch","$54b47fc030b7b21e$var$registerEl","$54b47fc030b7b21e$var$firstnameEl","$54b47fc030b7b21e$var$lastnameEl","$54b47fc030b7b21e$var$usernameEl","$54b47fc030b7b21e$var$passwordEl","$54b47fc030b7b21e$var$loginEl","$54b47fc030b7b21e$var$userNameLoginEl","$54b47fc030b7b21e$var$passWordLoginEl","$54b47fc030b7b21e$var$errMessageRegEl","addEventListener","event","preventDefault","firstnameValue","lastnameValue","usernameValue","passwordValue","textContent","userNameLoginValue","passWordLoginValue"],"version":3,"file":"index.3e31d741.js.map"}